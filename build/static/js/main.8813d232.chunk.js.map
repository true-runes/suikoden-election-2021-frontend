{"version":3,"sources":["reportWebVitals.ts","images/header.jpg","images/now_loading_flip_h.gif","images/now_loading_bounce.gif","NowLoading.tsx","SearchTweetsNotFoundNotice.tsx","SearchTweetsFoundNotice.tsx","SearchTweetsStatus.tsx","CheckVoteNotFoundNotice.tsx","CheckVoteFoundNotice.tsx","CheckVoteStatus.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NowLoading","props","p","style","margin","src","area","NowLoadingFlipGif","NowLoadingBounceGif","boxSize","SearchTweetsNotFoundNotice","maxW","status","align","href","target","rel","textDecoration","SearchTweetsFoundNotice","tabNamesByTabIndex","searchedUsername","searchedScreenName","tabIndex","SearchTweetsStatus","numberOfFoundTweets","CheckVoteNotFoundNotice","CheckVoteFoundNotice","CheckVoteStatus","App","useDisclosure","isOpen","onOpen","onClose","useState","id","tweetId","username","screenName","fullText","isRetweet","url","tweetedAt","mediaExists","isPublic","isMentionedToGssAdmin","apiResponses","setApiResponses","voteApiResponses","setVoteApiResponses","alreadyFetchedApi","setAlreadyFetchedApi","voteAlreadyFetchedApi","setVoteAlreadyFetchedApi","searchResultStatus","setSearchResultStatus","voteSearchResultStatus","setVoteSearchResultStatus","setNumberOfFoundTweets","voteNumberOfFoundTweets","setVoteNumberOfFoundTweets","submittedScreenName","setSubmittedScreenName","voteSubmittedScreenName","setVoteSubmittedScreenName","isShownNowLoadingGifIcon","setIsShowNowLoadingGifIcon","voteIsShownNowLoadingGifIcon","setVoteIsShowNowLoadingGifIcon","setSearchedScreenName","voteSearchedScreenName","setVoteSearchedScreenName","setSearchedUsername","voteSearchedUsername","setVoteSearchedUsername","waitingTweetIsShownText","setWaitingTweetIsShownText","voteWaitingTweetIsShownText","setVoteWaitingTweetIsShownText","setTabIndex","className","bg","position","top","zIndex","color","_active","_hover","stroke","onClick","as","IconButton","aria-label","icon","Hamburger","variant","borderStyle","autoFocus","placement","returnFocusOnClose","backgroundColor","borderBottomWidth","FaTwitter","isExternal","ExternalLink","mx","size","CgWebsite","logo","shadow","borderWidth","fontWeight","date","intervalDelay","precision","renderer","days","zeroPad","hours","minutes","seconds","onSubmit","event","axios","get","process","params","screen_name","response","data","length","preventDefault","type","value","onChange","placeholder","map","e","onLoad","isFitted","index","mb","_selected","apiUri","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8813d232.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals'\n\n// TODO: Missing return type on function  @typescript-eslint/explicit-module-boundary-types\n// eslint-disable-next-line\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","export default __webpack_public_path__ + \"static/media/header.d9c0657a.jpg\";","export default __webpack_public_path__ + \"static/media/now_loading_flip_h.a4587d8e.gif\";","export default __webpack_public_path__ + \"static/media/now_loading_bounce.45ca2bb0.gif\";","import React from 'react'\nimport { Image } from '@chakra-ui/react'\nimport { Center } from '@chakra-ui/react'\nimport { Box } from '@chakra-ui/react'\n\nimport NowLoadingFlipGif from './images/now_loading_flip_h.gif'\nimport NowLoadingBounceGif from './images/now_loading_bounce.gif'\n\nexport const NowLoading = (props: any) => {\n  return (\n    <Box p={2} style={{ margin: '0 0 20px 0' }}>\n      <Center>\n        <Image\n          src={\n            props.area === 'isFoundArea'\n              ? NowLoadingFlipGif\n              : NowLoadingBounceGif\n          }\n          boxSize=\"64px\"\n        />\n      </Center>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Container } from '@chakra-ui/react'\nimport { Box } from '@chakra-ui/react'\nimport { Alert, AlertIcon } from '@chakra-ui/react' // import {\n\nexport const SearchTweetsNotFoundNotice = () => {\n  return (\n    <Container maxW=\"container.xl\">\n      <hr style={{ margin: '0 0 13px 0' }} />\n\n      <Box p={2}>\n        <Alert status=\"error\">\n          <AlertIcon />\n          <Box p={2} align=\"left\">\n            <div>ツイートが見つかりませんでした。</div>\n            <div>\n              ご自身がなされたツイートが見つからない場合には、\n              <a\n                href=\"https://twitter.com/gensosenkyo\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                style={{ textDecoration: 'underline' }}\n              >\n                主催宛DM\n              </a>\n              で該当ツイートをお送り下さい。\n            </div>\n          </Box>\n        </Alert>\n      </Box>\n    </Container>\n  )\n}\n","import React from 'react'\nimport { Box } from '@chakra-ui/react'\nimport { Container } from '@chakra-ui/react'\nimport { Alert, AlertIcon } from '@chakra-ui/react' // import {\nimport { Text } from '@chakra-ui/react'\n\nexport const SearchTweetsFoundNotice = (props: any) => {\n  // ハードコーディングになっているのは良くない\n  const tabNamesByTabIndex = ['お題小説', '推し台詞']\n\n  return (\n    <Container maxW=\"container.xl\">\n      <hr style={{ margin: '0 0 13px 0' }} />\n\n      <Box p={2}>\n        <Alert status=\"success\">\n          <AlertIcon />\n          <Text align=\"left\">\n            {props.searchedUsername} (@{props.searchedScreenName})\n            さんの受理された{tabNamesByTabIndex[props.tabIndex]}\n            は下記の通りです。\n          </Text>\n        </Alert>\n        <Box p={2}></Box>\n        <Alert status=\"info\">\n          <AlertIcon />\n          <Text align=\"left\">\n            投稿した{tabNamesByTabIndex[props.tabIndex]}\n            のうち、表示されないツイートがある場合は、\n            <a\n              href=\"https://twitter.com/gensosenkyo\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              style={{ textDecoration: 'underline' }}\n            >\n              主催宛DM\n            </a>\n            で該当ツイートをお送り下さい。\n          </Text>\n        </Alert>\n      </Box>\n    </Container>\n  )\n}\n","import React from 'react'\n\nimport { SearchTweetsNotFoundNotice } from './SearchTweetsNotFoundNotice'\nimport { SearchTweetsFoundNotice } from './SearchTweetsFoundNotice'\n\nexport const SearchTweetsStatus = (props: any) => {\n  const ShownComponent = () => {\n    if (props.status === 'init') {\n      return <span></span>\n    } else if (props.status === 'found') {\n      return (\n        <SearchTweetsFoundNotice\n          numberOfFoundTweets={props.numberOfFoundTweets}\n          searchedScreenName={props.searchedScreenName}\n          searchedUsername={props.searchedUsername}\n          tabIndex={props.tabIndex}\n        />\n      )\n    } else if (props.status === 'notFound') {\n      return <SearchTweetsNotFoundNotice />\n    }\n\n    return <span></span>\n  }\n\n  return ShownComponent()\n}\n","import React from 'react'\nimport { Container } from '@chakra-ui/react'\nimport { Box } from '@chakra-ui/react'\nimport { Alert, AlertIcon } from '@chakra-ui/react' // import {\n\nexport const CheckVoteNotFoundNotice = () => {\n  return (\n    <Container maxW=\"container.xl\">\n      <hr style={{ margin: '0 0 13px 0' }} />\n\n      <Box p={2}>\n        <Alert status=\"error\">\n          <AlertIcon />\n          <Box p={2} align=\"left\">\n            <div>ツイートが見つかりませんでした。以下の点をご確認下さい。</div>\n          </Box>\n        </Alert>\n      </Box>\n      <Box p={2}>\n        <Alert status=\"info\">\n          <AlertIcon />\n          <Box p={2} align=\"left\">\n            <div>DM による投票はこのページでチェックすることはできません。</div>\n          </Box>\n        </Alert>\n      </Box>\n      <Box p={2}>\n        <Alert status=\"info\">\n          <AlertIcon />\n          <Box p={2} align=\"left\">\n            <div>\n              ツイートを削除したりアカウントに鍵を付けたりした場合には、チェック結果へ反映されない場合があります。\n            </div>\n          </Box>\n        </Alert>\n      </Box>\n      <Box p={2}>\n        <Alert status=\"info\">\n          <AlertIcon />\n          <Box p={2} align=\"left\">\n            <div>\n              ツイートが見つからなかった場合は集計に反映されない可能性があります。時間をおいて再度チェックし、それでも見つからない場合は\n              <a\n                href=\"https://twitter.com/gensosenkyo\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                style={{ textDecoration: 'underline' }}\n              >\n                主催宛DM\n              </a>\n              にご連絡下さい。\n            </div>\n          </Box>\n        </Alert>\n      </Box>\n    </Container>\n  )\n}\n","import React from 'react'\nimport { Box } from '@chakra-ui/react'\nimport { Container } from '@chakra-ui/react'\nimport { Alert, AlertIcon } from '@chakra-ui/react' // import {\nimport { Text } from '@chakra-ui/react'\n\nexport const CheckVoteFoundNotice = (props: any) => {\n  return (\n    <Container maxW=\"container.xl\">\n      <hr style={{ margin: '0 0 13px 0' }} />\n\n      <Box p={2}>\n        <Alert status=\"success\">\n          <AlertIcon />\n          <Text align=\"left\">\n            {props.searchedUsername} (@{props.searchedScreenName})\n            さんの投票ツイートは以下の通りです。\n          </Text>\n        </Alert>\n      </Box>\n    </Container>\n  )\n}\n","import React from 'react'\n\nimport { CheckVoteNotFoundNotice } from './CheckVoteNotFoundNotice'\nimport { CheckVoteFoundNotice } from './CheckVoteFoundNotice'\n\nexport const CheckVoteStatus = (props: any) => {\n  const ShownComponent = () => {\n    if (props.status === 'init') {\n      return <span></span>\n    } else if (props.status === 'found') {\n      return (\n        <CheckVoteFoundNotice\n          numberOfFoundTweets={props.numberOfFoundTweets}\n          searchedScreenName={props.searchedScreenName}\n          searchedUsername={props.searchedUsername}\n        />\n      )\n    } else if (props.status === 'notFound') {\n      return <CheckVoteNotFoundNotice />\n    }\n\n    return <span></span>\n  }\n\n  return ShownComponent()\n}\n","import React, { useState } from 'react'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport { Container } from '@chakra-ui/react'\nimport { Icon } from '@chakra-ui/react'\nimport { IconButton } from '@chakra-ui/react'\nimport { Alert, AlertIcon } from '@chakra-ui/react' // import {\nimport { Box } from '@chakra-ui/react'\nimport { Text } from '@chakra-ui/react'\nimport { Tabs, TabList, TabPanels, Tab, TabPanel } from '@chakra-ui/react'\nimport { FormControl, FormLabel } from '@chakra-ui/react'\nimport { Grid } from '@chakra-ui/react'\nimport { Heading } from '@chakra-ui/react'\nimport { Stack } from '@chakra-ui/react'\nimport { Link as ChakraLink } from '@chakra-ui/react'\nimport { Button } from '@chakra-ui/react'\nimport { Flex } from '@chakra-ui/react'\nimport { Menu, MenuButton } from '@chakra-ui/react'\nimport { Input } from '@chakra-ui/react'\nimport { useDisclosure } from '@chakra-ui/react'\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n} from '@chakra-ui/react'\n\nimport { ExternalLinkIcon, HamburgerIcon } from '@chakra-ui/icons'\nimport { FaTwitter } from 'react-icons/fa'\nimport { CgWebsite } from 'react-icons/cg'\n\nimport axios from 'axios'\nimport { Tweet } from 'react-twitter-widgets'\nimport Countdown, { zeroPad } from 'react-countdown'\n\nimport './App.scss'\nimport logo from './images/header.jpg'\nimport { NowLoading } from './NowLoading'\nimport { SearchTweetsStatus } from './SearchTweetsStatus'\nimport { CheckVoteStatus } from './CheckVoteStatus'\n\n// TODO: .eslintrc.json で無理矢理 OFF にしたものは ON で通るようにする\n// \"@typescript-eslint/no-explicit-any\": \"off\",\n// \"@typescript-eslint/explicit-module-boundary-types\": \"off\"\n\nfunction App() {\n  const { isOpen, onOpen, onClose } = useDisclosure()\n\n  const [apiResponses, setApiResponses] = useState([\n    {\n      id: 0,\n      tweetId: '',\n      username: '',\n      screenName: '',\n      fullText: '',\n      isRetweet: false,\n      url: '',\n      tweetedAt: '',\n      mediaExists: '',\n      isPublic: false,\n      isMentionedToGssAdmin: false,\n    },\n  ])\n\n  const [voteApiResponses, setVoteApiResponses] = useState([\n    {\n      id: 0,\n      tweetId: '',\n      username: '',\n      screenName: '',\n      fullText: '',\n      isRetweet: false,\n      url: '',\n      tweetedAt: '',\n      mediaExists: '',\n      isPublic: false,\n      isMentionedToGssAdmin: false,\n    },\n  ])\n\n  const [alreadyFetchedApi, setAlreadyFetchedApi] = useState(false)\n  const [voteAlreadyFetchedApi, setVoteAlreadyFetchedApi] = useState(false)\n  const [searchResultStatus, setSearchResultStatus] = useState('init')\n  const [voteSearchResultStatus, setVoteSearchResultStatus] = useState('init')\n  const [numberOfFoundTweets, setNumberOfFoundTweets] = useState(0)\n  const [voteNumberOfFoundTweets, setVoteNumberOfFoundTweets] = useState(0)\n  const [submittedScreenName, setSubmittedScreenName] = useState('')\n  const [voteSubmittedScreenName, setVoteSubmittedScreenName] = useState('')\n  const [isShownNowLoadingGifIcon, setIsShowNowLoadingGifIcon] = useState(false)\n  const [voteIsShownNowLoadingGifIcon, setVoteIsShowNowLoadingGifIcon] =\n    useState(false)\n  const [searchedScreenName, setSearchedScreenName] = useState('')\n  const [voteSearchedScreenName, setVoteSearchedScreenName] = useState('')\n  const [searchedUsername, setSearchedUsername] = useState('')\n  const [voteSearchedUsername, setVoteSearchedUsername] = useState('')\n  const [waitingTweetIsShownText, setWaitingTweetIsShownText] = useState(false)\n  const [voteWaitingTweetIsShownText, setVoteWaitingTweetIsShownText] =\n    useState(false)\n\n  // 0 が推し台詞、1 がお題小説yarn\n  const [tabIndex, setTabIndex] = useState(0)\n\n  const changeSubmittedScreenName = (event: any) => {\n    setSubmittedScreenName(event.target.value)\n  }\n\n  const changeVoteSubmittedScreenName = (event: any) => {\n    setVoteSubmittedScreenName(event.target.value)\n  }\n\n  const voteSearchTweets = (event: any) => {\n    // 必要に応じて各種の値を初期化する\n    setVoteAlreadyFetchedApi(true)\n    setVoteSearchResultStatus('init')\n    setVoteNumberOfFoundTweets(0)\n    setVoteIsShowNowLoadingGifIcon(true)\n    setVoteSearchedScreenName('')\n    setVoteSearchedUsername('')\n\n    const apiUri: any = process.env.REACT_APP_API_URI_CHECK_VOTE\n\n    axios\n      .get(apiUri, {\n        params: {\n          screen_name: voteSubmittedScreenName,\n        },\n      })\n      .then((response) => {\n        setVoteWaitingTweetIsShownText(true)\n        setVoteApiResponses(response.data)\n\n        if (response.data[0]) {\n          setVoteSearchResultStatus('found')\n          setVoteNumberOfFoundTweets(response.data.length)\n          setVoteSearchedScreenName(response.data[0].screenName)\n          setVoteSearchedUsername(response.data[0].username)\n        } else {\n          setVoteSearchResultStatus('notFound')\n        }\n\n        setVoteIsShowNowLoadingGifIcon(false)\n      })\n\n    event.preventDefault()\n  }\n\n  const searchTweets = (event: any) => {\n    // 必要に応じて各種の値を初期化する\n    setAlreadyFetchedApi(true)\n    setSearchResultStatus('init')\n    setNumberOfFoundTweets(0)\n    setIsShowNowLoadingGifIcon(true)\n    setSearchedScreenName('')\n    setSearchedUsername('')\n\n    let apiUri: any\n    // ハードコーディングは避ける\n    if (tabIndex === 0) {\n      apiUri = process.env.REACT_APP_API_URI_THEME_NOVELS\n    } else {\n      apiUri = process.env.REACT_APP_API_URI_RECOMMENDED_QUOTES\n    }\n\n    axios\n      .get(apiUri, {\n        params: {\n          screen_name: submittedScreenName,\n        },\n      })\n      .then((response) => {\n        setWaitingTweetIsShownText(true)\n        setApiResponses(response.data)\n\n        if (response.data[0]) {\n          setSearchResultStatus('found')\n          setNumberOfFoundTweets(response.data.length)\n          setSearchedScreenName(response.data[0].screenName)\n          setSearchedUsername(response.data[0].username)\n        } else {\n          setSearchResultStatus('notFound')\n        }\n\n        setIsShowNowLoadingGifIcon(false)\n      })\n\n    event.preventDefault()\n  }\n\n  return (\n    <div className=\"App\">\n      <Flex bg=\"#242222\" style={{ position: 'sticky', top: 0, zIndex: 1000 }}>\n        <Box p={2}>\n          <Menu>\n            <MenuButton\n              color=\"white\"\n              _active={{\n                color: 'white',\n              }}\n              _hover={{\n                color: 'white',\n                stroke: 'white',\n              }}\n              onClick={onOpen}\n              as={IconButton}\n              aria-label=\"Options\"\n              icon={<HamburgerIcon />}\n              variant=\"outline\"\n              borderStyle=\"solid\"\n            />\n          </Menu>\n        </Box>\n        <Box p={4}>\n          <Text color=\"#FFFFFF\">\n            <BrowserRouter>\n              <ChakraLink href=\"/\" style={{ textDecoration: 'none' }}>\n                幻水総選挙2021\n              </ChakraLink>\n            </BrowserRouter>\n          </Text>\n        </Box>\n      </Flex>\n      <Drawer\n        autoFocus={false}\n        placement=\"left\"\n        onClose={onClose}\n        isOpen={isOpen}\n        returnFocusOnClose={false}\n      >\n        <DrawerOverlay />\n        <DrawerContent style={{ zIndex: 1001, backgroundColor: '#f4f7f9' }}>\n          <DrawerHeader borderBottomWidth=\"2px\">\n            <Box p={2}>幻水総選挙2021</Box>\n          </DrawerHeader>\n          <DrawerBody>\n            <Box p={2}>\n              <Icon\n                as={FaTwitter}\n                style={{ margin: '0 10px 0 0' }}\n                color=\"#1da1f2\"\n              />\n              <ChakraLink href=\"https://twitter.com/gensosenkyo\" isExternal>\n                幻水総選挙アカウント (@gensosenkyo)\n                <ExternalLinkIcon mx=\"2px\" />\n              </ChakraLink>\n            </Box>\n            <hr style={{ margin: '10px 0' }} />\n            <Box p={2}>\n              <Heading as=\"h5\" size=\"sm\">\n                過去の総選挙\n              </Heading>\n            </Box>\n            <Box p={2}>\n              <ChakraLink\n                href=\"https://election-2020.suikoden.info/\"\n                isExternal\n              >\n                <Icon\n                  as={CgWebsite}\n                  style={{ margin: '0 10px 0 0' }}\n                  color=\"#1E90FF\"\n                />\n                幻水総選挙2020\n                <ExternalLinkIcon mx=\"2px\" />\n              </ChakraLink>\n            </Box>\n            <Box p={2}>\n              <ChakraLink\n                href=\"https://election-2019.suikoden.info/\"\n                isExternal\n              >\n                <Icon\n                  as={CgWebsite}\n                  style={{ margin: '0 10px 0 0' }}\n                  color=\"#1E90FF\"\n                />\n                幻水総選挙2019\n                <ExternalLinkIcon mx=\"2px\" />\n              </ChakraLink>\n            </Box>\n            <Box p={2}>\n              <ChakraLink\n                href=\"https://election-2018.suikoden.info/\"\n                isExternal\n              >\n                <Icon\n                  as={CgWebsite}\n                  style={{ margin: '0 10px 0 0' }}\n                  color=\"#1E90FF\"\n                />\n                幻水総選挙2018\n                <ExternalLinkIcon mx=\"2px\" />\n              </ChakraLink>\n            </Box>\n            <Box p={2}>\n              <ChakraLink\n                href=\"https://election-2017.suikoden.info/\"\n                isExternal\n              >\n                <Icon\n                  as={CgWebsite}\n                  style={{ margin: '0 10px 0 0' }}\n                  color=\"#1E90FF\"\n                />\n                幻水総選挙2017\n                <ExternalLinkIcon mx=\"2px\" />\n              </ChakraLink>\n            </Box>\n            <Box p={2}>\n              <ChakraLink\n                href=\"https://election-2016.suikoden.info/\"\n                isExternal\n              >\n                <Icon\n                  as={CgWebsite}\n                  style={{ margin: '0 10px 0 0' }}\n                  color=\"#1E90FF\"\n                />\n                幻水総選挙2016\n                <ExternalLinkIcon mx=\"2px\" />\n              </ChakraLink>\n            </Box>\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n      <img className=\"ui fluid image\" src={logo}></img>\n      <Container maxW=\"container.xl\">\n        <Box p={1}></Box>\n        <Box p={2}>\n          <Stack shadow=\"md\" borderWidth=\"1px\">\n            <Box p={4}>\n              <Text align=\"left\">\n                ※<span style={{ fontWeight: 'bold' }}>幻水総選挙</span>\n                は、ファンによる非公式の企画です。公式ならびに既存の企業様とは一切関係ありません。\n              </Text>{' '}\n            </Box>\n          </Stack>\n        </Box>\n        <Box p={2}>\n          <Stack shadow=\"md\" borderWidth=\"1px\">\n            <Box p={2}>\n              <Grid>\n                <Heading as=\"h3\" size=\"lg\">\n                  投票期間\n                </Heading>\n              </Grid>\n            </Box>\n            <Box p={2}>\n              <Grid>2021年6月11日（金）夜 21:00 から</Grid>\n              <Grid>2021年6月13日（日）昼 12:00 まで</Grid>\n              <Grid>（日本時間）</Grid>\n            </Box>{' '}\n            <Box p={2}>\n              投票開始まであと{' '}\n              <Countdown\n                date=\"2021-06-11T21:00:00+09:00\"\n                intervalDelay={0}\n                precision={3}\n                renderer={(props) => (\n                  <span>\n                    {props.days} 日 と {zeroPad(props.hours)}:\n                    {zeroPad(props.minutes)}:{zeroPad(props.seconds)}\n                  </span>\n                )}\n              />\n            </Box>\n          </Stack>\n        </Box>\n        <Box p={2}>\n          <Stack shadow=\"md\" borderWidth=\"1px\">\n            <Box p={2}>\n              <Grid>\n                <Heading as=\"h3\" size=\"lg\">\n                  投票方法など\n                </Heading>\n              </Grid>\n            </Box>\n            <Box p={2}>\n              <ChakraLink href=\"https://min.togetter.com/e75K0EY\" isExternal>\n                幻水総選挙2021について (min.t のまとめ){' '}\n                <ExternalLinkIcon mx=\"2px\" />\n              </ChakraLink>{' '}\n            </Box>{' '}\n          </Stack>\n        </Box>\n        <Box p={2}>\n          <Stack shadow=\"md\" borderWidth=\"1px\">\n            <Box p={2}>\n              <Grid>\n                <Heading as=\"h3\" size=\"lg\">\n                  投票チェック\n                </Heading>\n              </Grid>\n            </Box>\n            <form onSubmit={voteSearchTweets}>\n              <Container maxW=\"container.xl\" style={{ margin: '-15px 0 0 0' }}>\n                <FormControl id=\"email\">\n                  <FormLabel>\n                    <Box p={2}>\n                      投票ツイートのチェックをしたいユーザー名を入れてください（@は省略可能）。\n                    </Box>\n                  </FormLabel>\n                  <Box p={2}>\n                    <Input\n                      type=\"text\"\n                      value={voteSubmittedScreenName}\n                      onChange={changeVoteSubmittedScreenName}\n                      placeholder=\"@gensosenkyo（@は省略可能）\"\n                    />\n                  </Box>\n                  <Box p={2}>\n                    <Button type=\"submit\" value=\"Submit\">\n                      チェックする\n                    </Button>\n                  </Box>\n                  <Box p={2} style={{ margin: '0 0 5px 0' }}>\n                    <Alert status=\"error\">\n                      <AlertIcon />\n                      <Text align=\"left\">\n                        <div>\n                          ツイートが検索結果に反映されるまで、最大で20分程度かかることがあります。\n                        </div>\n                      </Text>\n                    </Alert>\n                  </Box>\n                  <Box p={2} style={{ margin: '0 0 5px 0' }}>\n                    <Alert status=\"info\">\n                      <AlertIcon />\n                      <Text align=\"left\">\n                        <div>\n                          <p>\n                            検索できるのは公開アカウントのツイートのみです。\n                          </p>\n                        </div>\n                      </Text>\n                    </Alert>\n                  </Box>\n                </FormControl>\n              </Container>\n            </form>\n            {voteSearchResultStatus === 'init' ? (\n              ''\n            ) : (\n              <CheckVoteStatus\n                status={voteSearchResultStatus}\n                numberOfFoundTweets={voteNumberOfFoundTweets}\n                searchedScreenName={voteSearchedScreenName}\n                searchedUsername={voteSearchedUsername}\n              />\n            )}\n            {voteIsShownNowLoadingGifIcon ? (\n              <NowLoading area=\"isFoundArea\" />\n            ) : (\n              ''\n            )}\n            {voteIsShownNowLoadingGifIcon || !voteAlreadyFetchedApi\n              ? ''\n              : voteApiResponses.map((e) => {\n                  return (\n                    <div key={e.id}>\n                      <Container>\n                        <div>{voteWaitingTweetIsShownText}</div>\n                        {voteWaitingTweetIsShownText ? (\n                          <NowLoading area=\"tweetsArea\" />\n                        ) : (\n                          ''\n                        )}\n                        <Tweet\n                          tweetId={e.tweetId}\n                          onLoad={() => setVoteWaitingTweetIsShownText(false)}\n                        />\n                      </Container>\n                    </div>\n                  )\n                })}{' '}\n          </Stack>\n        </Box>\n        <Box p={2}>\n          <Stack shadow=\"md\" borderWidth=\"1px\">\n            <Box p={2}>\n              <Grid>\n                <Heading as=\"h3\" size=\"lg\">\n                  応募チェック\n                  <br />\n                  （お題小説・推し台詞）\n                </Heading>\n              </Grid>\n            </Box>\n            <Box p={2}>\n              <Tabs\n                isFitted\n                variant=\"line\"\n                onChange={(index) => setTabIndex(index)}\n              >\n                <TabList mb=\"0.3em\">\n                  <Tab\n                    _selected={{\n                      color: 'white',\n                      bg: 'blue.500',\n                    }}\n                  >\n                    お題小説\n                  </Tab>\n                  <Tab\n                    _selected={{\n                      color: 'white',\n                      bg: 'blue.500',\n                    }}\n                  >\n                    推し台詞\n                  </Tab>\n                </TabList>\n                <TabPanels>\n                  <TabPanel>\n                    <Heading as=\"h4\" size=\"md\">\n                      お題小説 応募チェック\n                    </Heading>\n                    <Box p={1}>（#幻水総選挙お題小説）</Box>\n                  </TabPanel>\n                  <TabPanel>\n                    <Heading as=\"h4\" size=\"md\">\n                      推し台詞 応募チェック\n                    </Heading>\n                    <Box p={1}>（#幻水総選挙推し台詞）</Box>\n                  </TabPanel>\n                </TabPanels>\n              </Tabs>\n            </Box>\n            <form onSubmit={searchTweets}>\n              <Container maxW=\"container.xl\" style={{ margin: '-15px 0 0 0' }}>\n                <FormControl id=\"email\">\n                  <FormLabel>\n                    <Box p={2}>\n                      ツイートのチェックをしたいユーザー名を入れてください（@は省略可能）。\n                    </Box>\n                  </FormLabel>\n                  <Box p={2}>\n                    <Input\n                      type=\"text\"\n                      value={submittedScreenName}\n                      onChange={changeSubmittedScreenName}\n                      placeholder=\"@gensosenkyo（@は省略可能）\"\n                    />\n                  </Box>\n                  <Box p={2}>\n                    <Button type=\"submit\" value=\"Submit\">\n                      検索する\n                    </Button>\n                  </Box>\n                  <Box p={2} style={{ margin: '0 0 5px 0' }}>\n                    <Alert status=\"info\">\n                      <AlertIcon />\n                      <Text align=\"left\">\n                        <div>\n                          検索できるのは公開アカウントのツイートのみです。\n                        </div>\n                      </Text>\n                    </Alert>\n                  </Box>\n                </FormControl>\n              </Container>\n            </form>\n            {searchResultStatus === 'init' ? (\n              ''\n            ) : (\n              <SearchTweetsStatus\n                status={searchResultStatus}\n                numberOfFoundTweets={numberOfFoundTweets}\n                searchedScreenName={searchedScreenName}\n                searchedUsername={searchedUsername}\n                tabIndex={tabIndex}\n              />\n            )}\n            {isShownNowLoadingGifIcon ? <NowLoading area=\"isFoundArea\" /> : ''}\n            {isShownNowLoadingGifIcon || !alreadyFetchedApi\n              ? ''\n              : apiResponses.map((e) => {\n                  return (\n                    <div key={e.id}>\n                      <Container>\n                        <div>{waitingTweetIsShownText}</div>\n                        {waitingTweetIsShownText ? (\n                          <NowLoading area=\"tweetsArea\" />\n                        ) : (\n                          ''\n                        )}\n                        <Tweet\n                          tweetId={e.tweetId}\n                          onLoad={() => setWaitingTweetIsShownText(false)}\n                        />\n                      </Container>\n                    </div>\n                  )\n                })}\n          </Stack>\n        </Box>\n        <Box p={2}>\n          <hr></hr>\n        </Box>\n        <Box p={2}>\n          <ChakraLink href=\"https://twitter.com/gensosenkyo\" isExternal>\n            幻水総選挙2021 (@gensosenkyo)\n            <ExternalLinkIcon mx=\"2px\" />\n          </ChakraLink>\n        </Box>{' '}\n        <Box p={2}></Box>\n      </Container>{' '}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\n\nimport { ChakraProvider } from '@chakra-ui/react'\n\nimport App from './App'\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}